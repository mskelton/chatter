name: Release
on: push
permissions:
  contents: read
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: mskelton/setup-yarn@v1
        with:
          node-version: '18.x'
      - name: Lint
        run: yarn lint
      - name: Code style
        run: yarn prettier --check .
  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: mskelton/setup-yarn@v1
        with:
          node-version: '18.x'
      - name: Type check
        run: yarn ts
  release:
    name: Create GitHub release
    if: github.ref == 'refs/heads/main'
    needs: [lint, typecheck]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: mskelton/setup-yarn@v1
        with:
          node-version: '18.x'
          fetch-depth: 0
      - name: Release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set version
        id: set-version
        run: |
          version="$(yarn print-version)"
          echo "version=$version" >> "$GITHUB_OUTPUT"
  publish:
    name: Publish Electron app
    if: ${{ needs.release.outputs.version != '0.0.1-semantically-released' }}
    needs: release
    strategy:
      matrix:
        os: [macos-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - uses: mskelton/setup-yarn@v1
        with:
          node-version: '18.x'
      - name: Update manifest version
        run: |
          npm version --no-git-tag-version ${{ needs.release.outputs.version }}
      - name: Add macOS certs
        if: matrix.os == 'macos-latest'
        run: |
          chmod +x ./scripts/add-osx-cert.sh
          ./scripts/add-osx-cert.sh
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
      - name: Publish app
        run: yarn electron-forge make --arch=${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
